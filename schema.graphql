type User @entity {
  id: ID!
  tokens: [Token!] @derivedFrom(field: "user")
  orders: [Order!] @derivedFrom(field: "user")
  giveTrades: [Trade!] @derivedFrom(field: "giveUser")
  getTrades: [Trade!] @derivedFrom(field: "getUser")
  deposits: [Deposit!] @derivedFrom(field: "user")
  withdraws: [Withdraw!] @derivedFrom(field: "user")
  cancels: [Cancel!] @derivedFrom(field: "user")
}

"ERC20 Token per User"
type Token @entity {
  "(User Address of Token)-(Address of Token)"
  id: ID!
  "User Address of Token"
  user: User!
  "Address of Token"
  address: String!
  balance: BigInt!
  name: String
}

type Order @entity {
  id: ID!
  block_number: BigInt!
  timestamp: BigInt!
  user: User!
  amountGive: BigInt!
  amountGet: BigInt!
  tokenGive: Token!
  tokenGet: Token!
}
type Trade @entity {
  id: ID!
  block_number: BigInt!
  timestamp: BigInt!
  amountGive: BigInt!
  amountGet: BigInt!
  tokenGive: Token!
  tokenGet: Token!
  getUser: User!
  giveUser: User!
}
type Deposit @entity {
  id: ID!
  block_number: BigInt!
  timestamp: BigInt!
  user: User!
  amount: BigInt!
  token: Token!
  balance: BigInt!
}
type Withdraw @entity {
  id: ID!
  block_number: BigInt!
  timestamp: BigInt!
  user: User!
  amount: BigInt!
  token: Token!
  balance: BigInt!
}
type Cancel @entity {
  id: ID!
  block_number: BigInt!
  timestamp: BigInt!
  user: User!
  amountGive: BigInt!
  amountGet: BigInt!
  tokenGive: Token!
  tokenGet: Token!
}
        
